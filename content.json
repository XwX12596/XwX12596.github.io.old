{"meta":{"title":"XwXStudio","subtitle":"A Backup of Life","description":null,"author":"XwX","url":"http://www.xwxstudio.com","root":"/"},"pages":[{"title":"Gallery","date":"2022-01-24T06:28:27.000Z","updated":"2022-02-26T14:34:10.157Z","comments":true,"path":"Gallery/index.html","permalink":"http://www.xwxstudio.com/Gallery/index.html","excerpt":"","text":"壁纸 网站所用图片 YOUSA 泠鸢与小伙伴们 见闻 旅行照片 存档 一些图片的备份"},{"title":"About","date":"2022-01-26T09:56:48.000Z","updated":"2022-02-26T14:20:00.000Z","comments":true,"path":"about/index.html","permalink":"http://www.xwxstudio.com/about/index.html","excerpt":"","text":"关于关于我姓名：许忞欢 性别：男 00后，20岁，是学生。 专业电子信息，失败大学生，就读于夏官营大学。 梦想是以后能养活自己和自己的兴趣。 联系方式QQ：1259685860 这个网站想为自己的生活留下点证明，但其实只是不务正业的档案。"},{"title":"Categories","date":"2022-01-23T12:21:50.000Z","updated":"2022-02-26T14:34:10.157Z","comments":true,"path":"categories/index.html","permalink":"http://www.xwxstudio.com/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2022-01-23T12:18:41.000Z","updated":"2022-02-26T14:34:10.157Z","comments":true,"path":"tags/index.html","permalink":"http://www.xwxstudio.com/tags/index.html","excerpt":"","text":""},{"title":"Artitalk","date":"2022-01-25T13:59:41.000Z","updated":"2022-02-26T14:34:10.157Z","comments":true,"path":"artitalk/index.html","permalink":"http://www.xwxstudio.com/artitalk/index.html","excerpt":"","text":""},{"title":"travel","date":"2022-02-19T12:51:19.000Z","updated":"2022-02-19T13:04:46.578Z","comments":true,"path":"Gallery/travel/index.html","permalink":"http://www.xwxstudio.com/Gallery/travel/index.html","excerpt":"","text":""},{"title":"Link","date":"2022-01-23T12:22:25.000Z","updated":"2022-02-26T14:34:10.157Z","comments":true,"path":"link/index.html","permalink":"http://www.xwxstudio.com/link/index.html","excerpt":"","text":""},{"title":"Backup","date":"2022-02-26T13:34:07.000Z","updated":"2022-02-26T14:34:10.157Z","comments":true,"path":"Gallery/backup/index.html","permalink":"http://www.xwxstudio.com/Gallery/backup/index.html","excerpt":"","text":""},{"title":"Wallpaper","date":"2022-01-24T06:29:11.000Z","updated":"2022-02-26T14:34:10.157Z","comments":true,"path":"Gallery/wallpaper/index.html","permalink":"http://www.xwxstudio.com/Gallery/wallpaper/index.html","excerpt":"","text":""},{"title":"泠鸢yousa","date":"2022-02-26T13:45:41.000Z","updated":"2022-02-26T14:34:10.157Z","comments":true,"path":"Gallery/yousa/index.html","permalink":"http://www.xwxstudio.com/Gallery/yousa/index.html","excerpt":"","text":""}],"posts":[{"title":"Kindle配合Calibre的简单使用","slug":"kindle","date":"2022-02-25T15:58:50.000Z","updated":"2022-02-25T16:29:50.434Z","comments":true,"path":"2022/02/25/kindle/","link":"","permalink":"http://www.xwxstudio.com/2022/02/25/kindle/","excerpt":"","text":"Calibre安装官网脚本自动安装 1sudo -v &amp;&amp; wget -nv -O- https://download.calibre-ebook.com/linux-installer.sh | sudo sh /dev/stdin 插件安装接着上GitHub下载DeDRM_plugin，否则没法导出kindle商店买的电子书。 此时记得先解压一次。 在Calibre中，后面操作如下首选项&gt;插件&gt;从文件加载插件,选中DeDRM_plugin.zip,随后重启Calibre即可。 插件配置接着需要将Kindle序列号输入插件的设置中,在首选项&gt;插件界面下,选择自定义该插件,选择eInk Kindle ebooks,按下”+”号,输入序列号（不需要空格）。 其中Kindle序列号在设置&gt;设备信息界面中可以找到。 Kindle版本为 Kindle Paperwhite（第十代） 从Kindle商店购买并加工为无加密的文件搜索引擎搜索Kindle商店，在我的账户下拉菜单里找到管理我的内容与设备，在此页面可以下载加密后的文件。下面看到Calibre，将文件添加书籍后，进行转换书籍至需要的格式，DeDRM便会自动运行，得到非加密的文件。 当然你也可以在类似z-library之类的找到想要的文档。 网络电子书传进Kindle添加书籍，传输进去即可。","categories":[{"name":"life","slug":"life","permalink":"http://www.xwxstudio.com/categories/life/"},{"name":"read","slug":"life/read","permalink":"http://www.xwxstudio.com/categories/life/read/"}],"tags":[{"name":"Kindle","slug":"Kindle","permalink":"http://www.xwxstudio.com/tags/Kindle/"},{"name":"电纸书","slug":"电纸书","permalink":"http://www.xwxstudio.com/tags/%E7%94%B5%E7%BA%B8%E4%B9%A6/"},{"name":"阅读","slug":"阅读","permalink":"http://www.xwxstudio.com/tags/%E9%98%85%E8%AF%BB/"}]},{"title":"Git初学笔记","slug":"Git","date":"2022-02-09T13:37:07.000Z","updated":"2022-02-09T14:34:05.343Z","comments":true,"path":"2022/02/09/Git/","link":"","permalink":"http://www.xwxstudio.com/2022/02/09/Git/","excerpt":"","text":"安装Git由于我用的是manjaro，所以就直接yay了。 1yay -Sy git 其他系统下载 如果是Win系统可以安装后右键打开Git GUI（ 基础配置 首先是报上名来。 12git config --global user.name &quot;whoami&quot;git config --global user.email myemail@example.com 如果不放心是否成功可以查一下： 1git config --list 接着就初始化本地仓库 123git initgit add --allgit commit -m &#x27;init&#x27; 然后是加公钥 先是自己机子生成一下 1ssh-keygen -t rsa -C &quot;myemail@example.com&quot; 现在～/.ssh/id_rsa.pub里面已经出现了公钥，全部复制即可。 再是加入到Github上的设置里 1个人主页&gt;头像右边的小三角&gt;Settings&gt;SSH and GPG keys&gt;New ssh key 开始使用 添加远程仓库 1git remote add origin git@github.com:username/repo.git 克隆仓库 1git clone git@github.com:username/repo.git 从远程仓库获取分支 1git fetch origin 合并分支 1git merge origin/master 下载远程代码并合并 1git pull &lt;远程主机名&gt; &lt;远程分支名&gt;(:&lt;本地分支名&gt;) 上传本地代码并合并 1git push &lt;远程主机名&gt; &lt;本地分支名&gt;(:&lt;远程分支名&gt;) 分支管理 1VSCode","categories":[{"name":"tech","slug":"tech","permalink":"http://www.xwxstudio.com/categories/tech/"}],"tags":[{"name":"Git","slug":"Git","permalink":"http://www.xwxstudio.com/tags/Git/"},{"name":"Github","slug":"Github","permalink":"http://www.xwxstudio.com/tags/Github/"}]},{"title":"Minecraft服务器(ListAndBak)","slug":"MC","date":"2022-02-02T01:54:20.000Z","updated":"2022-02-17T13:31:11.594Z","comments":true,"path":"2022/02/02/MC/","link":"","permalink":"http://www.xwxstudio.com/2022/02/02/MC/","excerpt":"","text":"minecraft 1.18.1 Fabric已停运! 下面是当时所用docker-compose.yml(需适当修改) 1234567891011121314151617181920212223242526272829303132version: &quot;3&quot;services: fabric: image: itzg/minecraft-server:latest ports: - 25565:25565 volumes: - &quot;/root/MC/fabric:/data&quot; - &quot;/root/fabric/world:/world&quot; environment: EULA: &quot;TRUE&quot; VERSION: &quot;1.18.1&quot; TYPE: &quot;FABRIC&quot; MODS: &quot;/mods&quot; WORLD: &quot;/world&quot; DIFFICULTY: &quot;hard&quot; MAX_PLAYERS: &quot;5&quot; FORCE_GAMEMODE: &quot;true&quot; HARDCORE: &quot;false&quot; MODE: &quot;survival&quot; PVP: &quot;true&quot; ONLINE_MODE: &quot;false&quot; ALLOW_FLIGHT: &quot;true&quot; SERVER_NAME: &quot;DD&#x27;s Server&quot; MOTD: &quot;DD&#x27;s Server&quot; MEMORY: &quot;6G&quot; WHITELIST: &quot;&quot; OPS: &quot;X_w_X&quot; BROADCAST_CONSOLE_TO_OPS: &quot;false&quot; BROADCAST_RCON_TO_OPS: &quot;false&quot; restart: always 服务器备份在Github 模组列表： phosphor(可选) lithium(可选)","categories":[],"tags":[{"name":"Games","slug":"Games","permalink":"http://www.xwxstudio.com/tags/Games/"},{"name":"Minecraft","slug":"Minecraft","permalink":"http://www.xwxstudio.com/tags/Minecraft/"}]},{"title":"记录利用docker开设Hexo框架简单博客","slug":"Hexo","date":"2022-02-01T14:00:00.000Z","updated":"2022-02-09T14:07:28.445Z","comments":true,"path":"2022/02/01/Hexo/","link":"","permalink":"http://www.xwxstudio.com/2022/02/01/Hexo/","excerpt":"","text":"准备工作云服务器 系统：Ubuntu 使用域名：www.xwxstudio.com Node.js从NodeSource安装12curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -sudo apt-get install -y nodejs 或者yay -Sy nodejs Hexo官方文档的npm安装。1curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash 或者yay -Sy npm 在Node背景下的Hexo安装。1234567npm install hexo-cli -g#初始化文件夹hexo init .npm install#在4000端口开放服务hexo server#指定端口使用参数 -p docker使用官方安装脚本自动安装。从阿里云用cURL安装： 1curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun 或者yay -Sy docker docker-compose Hexo配置文件目录12345678.├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes _config.yml：Hexo的配置文件themes：放主题文件的文件夹source/_drafts：放草稿的文件夹source/_posts：放帖子的文件夹 基本信息配置详见Hexo配置 Docker配置Dockerfilehexo镜像 仅仅作Hexo模板的初始化 12345678910111213FROM node:latestMAINTAINER XwXWORKDIR /hexoRUN npm install hexo-cli -g\\&amp;&amp; hexo init .\\&amp;&amp; npm installEXPOSE 4000CMD [&quot;/bin/bash&quot;] 运行docker build -t &#39;hexo&#39; blog镜像 生成具体博客镜像 123456789FROM hexo:latestMAINTAINER name &lt;mail&gt;WORKDIR /hexoEXPOSE 4000CMD [&quot;/usr/bin/env&quot;,&quot;hexo&quot;,&quot;server&quot;] 运行docker build -t &#39;blog&#39; . docker-compose.yml 在具体文件夹创建容器 1234567891011121314version: &#x27;3&#x27;services: blog: restart: always build: context: . dockerfile: Dockerfile image: &#x27;blog&#x27; container_name: hexo-blog ports: - &quot;80:4000&quot; volumes: - $HOME/.ssh:/root/.ssh - .:/hexo 开启容器：docker-compose up -d 关闭容器：docker-compose down 写作修改 直接对宿主机文件进行操作即可实现hexo博客的创建，配置与写作。 文件管理 直接使用Git对本地和云端的数据进行版本管理。 可以使用VScode进行Git的pull和push操作。","categories":[{"name":"tech","slug":"tech","permalink":"http://www.xwxstudio.com/categories/tech/"},{"name":"web","slug":"tech/web","permalink":"http://www.xwxstudio.com/categories/tech/web/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://www.xwxstudio.com/tags/Hexo/"},{"name":"Docker","slug":"Docker","permalink":"http://www.xwxstudio.com/tags/Docker/"},{"name":"Blog","slug":"Blog","permalink":"http://www.xwxstudio.com/tags/Blog/"}]}],"categories":[{"name":"life","slug":"life","permalink":"http://www.xwxstudio.com/categories/life/"},{"name":"read","slug":"life/read","permalink":"http://www.xwxstudio.com/categories/life/read/"},{"name":"tech","slug":"tech","permalink":"http://www.xwxstudio.com/categories/tech/"},{"name":"web","slug":"tech/web","permalink":"http://www.xwxstudio.com/categories/tech/web/"}],"tags":[{"name":"Kindle","slug":"Kindle","permalink":"http://www.xwxstudio.com/tags/Kindle/"},{"name":"电纸书","slug":"电纸书","permalink":"http://www.xwxstudio.com/tags/%E7%94%B5%E7%BA%B8%E4%B9%A6/"},{"name":"阅读","slug":"阅读","permalink":"http://www.xwxstudio.com/tags/%E9%98%85%E8%AF%BB/"},{"name":"Git","slug":"Git","permalink":"http://www.xwxstudio.com/tags/Git/"},{"name":"Github","slug":"Github","permalink":"http://www.xwxstudio.com/tags/Github/"},{"name":"Games","slug":"Games","permalink":"http://www.xwxstudio.com/tags/Games/"},{"name":"Minecraft","slug":"Minecraft","permalink":"http://www.xwxstudio.com/tags/Minecraft/"},{"name":"Hexo","slug":"Hexo","permalink":"http://www.xwxstudio.com/tags/Hexo/"},{"name":"Docker","slug":"Docker","permalink":"http://www.xwxstudio.com/tags/Docker/"},{"name":"Blog","slug":"Blog","permalink":"http://www.xwxstudio.com/tags/Blog/"}]}